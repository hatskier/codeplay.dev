!function(e){var t={};function a(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=t,a.d=function(e,t,o){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(a.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)a.d(o,n,function(t){return e[t]}.bind(null,n));return o},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=339)}({110:function(e,t,a){"use strict";var o=a(34);t.a={success:["https://s3.amazonaws.com/alcourses.codeplay/Gifs/Success/barnie-success.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Success/bear-success.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Success/brad-pit-success.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Success/fortnite-dance-1-success.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Success/fortnite-dance-2-success.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Success/friends-success.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Success/jump-success.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Success/tony-stark-success.gif"],fail:["https://s3.amazonaws.com/alcourses.codeplay/Gifs/Fail/no-cock.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Fail/no-kid.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Fail/no-minion.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Fail/no-parrot.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Fail/giphy-no-2.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Fail/giphy-no-3.gif","https://s3.amazonaws.com/alcourses.codeplay/Gifs/Fail/giphy-sonic-no.gif"],thanks:[],getRandomImg:e=>e[Math.min(Math.round(Math.random()*e.length),e.length-1)],getFailImg(){return this.getRandomImg(this.fail)},getSuccessImg(){return this.getRandomImg(this.success)},preLoad(){for(let e of["fail","success"]){o.a.info(`Loading gifs for type: ${e}`);for(let t of this[e]){const e=new Image;e.src=t,e.onload=function(){o.a.info(`Image loaded: ${t}`)}}}}}},147:function(e,t,a){"use strict";var o={bg:"https://s3.amazonaws.com/alcourses.codeplay/example1/city-miami.jpg",size:{width:500,height:400},objects:[{id:"Car",img:"https://s3.amazonaws.com/alcourses.codeplay/example1/car-black.png",size:{width:50,height:50},startPos:{x:100,y:70}},{id:"Rocket",img:"https://s3.amazonaws.com/alcourses.codeplay/example1/rocket.png",size:{width:50,height:100},startPos:{x:50,y:100}}],taskDescription:"You need to move car forward or backward some text and some some some text again lorem",methods:{"car.go":{doc:"Car goes forward",async run(e,t){t&&t[0]?await e.field.safeMove("Car",{x:t[0],y:0}):await e.field.safeMove("Car",{x:0,y:10})}},"car.back":{doc:"Car foes back",async run(e){await e.field.safeMove("Car",{x:0,y:-10})}},"rocket.up":{doc:"Rocket flies up",async run(e){await e.field.safeMove("Rocket",{x:0,y:-190})}}},grade:e=>e.field.checkPosById("Car",{x:20,y:10})?5:0};const n=50;function s(e){return JSON.parse(JSON.stringify(e))}function i(e,t){throw e.field.log(`Error: ${t}. Please fix your code and try again ;)`),new Error(t)}var r=function({path:e,stepWidth:t,startCodeVal:a,solutionCode:o,size:r}){const c={x:0,y:5};let d={images:{skale:"https://s3.amazonaws.com/alcourses.codeplay/labyrinth/skale.jpg","man-static":"https://s3.amazonaws.com/alcourses.codeplay/labyrinth/caveman-waiting.png","man-going-left":"https://s3.amazonaws.com/alcourses.codeplay/labyrinth/caveman-going-left.gif","man-going-right":"https://s3.amazonaws.com/alcourses.codeplay/labyrinth/caveman-going-right.gif"},bg:"skale",objects:[{kind:"img",id:"Man",imgKey:"man-static",size:{width:n,height:n},startPos:c}],taskDescription:"Write the directions for the man to get through the labyrinth"};function l(t,a,o,n){return{doc:t,async run(t,s){let r=1;async function c(){if("left"==n?await t.field.changeImage("Man","man-going-left"):await t.field.changeImage("Man","man-going-right"),await t.field.safeMove("Man",{x:a,y:o}),t.state.path){let e=t.state.path[t.state.path.length-1];e.direction==n?e.length++:t.state.path.push({direction:n,length:1})}else t.state.path=[{direction:n,length:1}];let s=t.state.path.length,r=t.state.path[s-1];(r.direction!==e[s-1].direction||r.length>e[s-1].length)&&i(t,"Bad move - man can't go there"),s>1&&t.state.path[s-2].length!==e[s-2].length&&i(t,"Bad move - man can't go there")}if(s.length>0&&(r=s[0]),t.field.log(`Man is going ${r} steps ${n}...`),function(e){if(e&&e.length>1)throw new Error("Too many arguments")}(s),s&&1==s.length)for(let e=0;e<r;e++)await c();else await c()}}}return function(){let a=[];const o=r.width*(t/100);let i=s(c);for(let c of e)for(let e=0;e<c.length;e++){let e={kind:"html",html:'<div id="___ID___" style="background: cornsilk; border: 1px solid orange;"></div>'};switch(e.size={width:"left"==c.direction||"right"==c.direction?o:n,height:"up"==c.direction||"down"==c.direction?o:n},e.startPos=s(i),"left"==c.direction&&(e.startPos.x-=t-n/r.width*100),a.push(e),c.direction){case"left":i.x-=t;break;case"right":i.x+=t;break;case"up":i.y-=t;break;case"down":i.y+=t;break;default:throw new Error("Unsupported statement: "+c.direction)}}d.objects=a.concat(d.objects)}(),d.size=r,d.methods={"man.moveRight":l("The caveman goes right",t,0,"right"),"man.moveLeft":l("The caveman goes left",-t,0,"left"),"man.moveUp":l("The caveman goes up",0,-t,"up"),"man.moveDown":l("The caveman goes down",0,t,"down")},d.iterations=[{pre:async function(e){await e.field.changeImage("Man","man-going-left")},post:async function(t){await t.field.changeImage("Man","man-static"),function(e,t){let a=e.length,o=t.length;return e&&t&&a==o&&e[a-1].length-t[o-1].length<=1&&e[a-1].length-t[o-1].length>=0}(e,t.state.path)||i(t,"You have not reached the target")}}],d.tickHooks={pre:async function(){},post:async function(){}},d.startCodeVal=a,d.solutionCode=o,d};var c=r({size:{width:450,height:450},path:[{direction:"right",length:2},{direction:"down",length:3},{direction:"right",length:2}],stepWidth:25,solutionCode:"\nman.moveRight();\nman.moveRight();\nman.moveDown();\nman.moveDown();\nman.moveDown();\nman.moveRight();\nman.moveRight();\n",startCodeVal:"// Write the directions for the man\n// to get through the labyrinth\nman.moveRight();\n"});var d=r({size:{width:450,height:450},path:[{direction:"right",length:6},{direction:"down",length:2},{direction:"left",length:4},{direction:"down",length:4},{direction:"right",length:7}],stepWidth:11,solutionCode:"\nman.moveRight(6);\nman.moveDown(2);\nman.moveLeft(4);\nman.moveDown(4);\nman.moveRight(7);\n",startCodeVal:"// Write the directions for the man\n// to get through the labyrinth\nman.moveRight(6);\n"});var l=r({size:{width:450,height:450},path:[{direction:"right",length:4},{direction:"down",length:2},{direction:"left",length:3},{direction:"down",length:3},{direction:"right",length:5},{direction:"down",length:2},{direction:"right",length:3}],stepWidth:11,solutionCode:"\nman.moveRight(4);\nman.moveDown(2);\nman.moveLeft(3);\nman.moveDown(3);\nman.moveRight(5);\nman.moveDown(2);\nman.moveRight(3);\n",startCodeVal:"// Write the directions for the man\n// to get through the labyrinth\nman.moveRight(4);\n"});const h=100,g=50,m=9,u={width:h,height:1.2*h};function p(e){return new Promise(function(t){setTimeout(t,e)})}function f(e,t){throw t.log(`Error: ${e}`,{error:!0}),new Error(e)}var w=function({enemies:e,startPosX:t,maxTicksToWin:a,startCodeVal:o,solutionCode:n,stepWidth:s}){function i(e,t,a){const o=t.findById(e),n=t.findById("Hero");let s=!1;switch(a.enemies[e].kind){case"archer":s=n.pos.x<o.pos.x;break;case"warrior":s=n.pos.x<o.pos.x+m&&n.pos.x+m>=o.pos.x;break;default:s=!0}return s&&!("defending"==a.heroAction)}async function r(e,t){let a=t.findById(e).img.key+"-dying";"Hero"==e?(a="hero-dying",t.log("Unfortunatelly hero was killed. Please try again!")):t.log(`${e} is dying...`),"Dragon"===e||"Hero"===e||e.includes("Warrior")||t.changeImageSize(e,u),await t.changeImage(e,a),e.includes("Warrior"),e.includes("Archer")&&await t.safeMove(e,{x:2,y:1},{fast:!0}),await p(t.tickTime)}async function c(t,a){const o=a.findById(t),n=o.img.key,s=n+"-attacking";await a.changeImage(t,s);const i={width:h/2,height:h/2};if("Hero"==t){const e=a.addObject({kind:"img",imgKey:"spear",startPos:{x:o.pos.x,y:o.pos.y},size:{width:1.5*i.width,height:2.5*i.height}});await a.safeMove(e.id,{x:0,y:-30}),a.removeObject(e.id)}const r=a.findById("Hero");if(e[t])switch(e[t].kind){case"dragon":{const e=a.addObject({kind:"img",imgKey:"fire",startPos:{x:o.pos.x+8,y:o.pos.y+27},size:i});await a.moveToPos(e.id,r.pos),a.removeObject(e.id);break}case"archer":{let e=o.pos.y+8;const t=a.addObject({kind:"img",imgKey:"arrow",startPos:{x:o.pos.x,y:e},size:{width:i.width,height:i.height/3}}),n={y:e,x:r.pos.x+7};await a.moveToPos(t.id,n),a.removeObject(t.id);break}default:await d(0,a)}await a.changeImage(t,n)}async function d(e,t){await p(t.tickTime)}let l={images:{hero:"https://s3.amazonaws.com/alcourses.codeplay/battle/hero-waiting.gif","hero-sword-attack":"https://s3.amazonaws.com/alcourses.codeplay/battle/hero-attacking.gif","hero-spear-attack":"https://s3.amazonaws.com/alcourses.codeplay/battle/hero-waiting.gif","hero-going":"https://s3.amazonaws.com/alcourses.codeplay/battle/hero-running.gif","hero-dying":"https://s3.amazonaws.com/alcourses.codeplay/battle/grave.png","hero-defending":"https://s3.amazonaws.com/alcourses.codeplay/battle/hero-defending.gif",dragon:"https://s3.amazonaws.com/alcourses.codeplay/battle/dragon-flying.gif","dragon-attacking":"https://s3.amazonaws.com/alcourses.codeplay/battle/dragon-flying.gif","dragon-dying":"https://s3.amazonaws.com/alcourses.codeplay/battle/grave-with-wings.gif",warrior:"https://s3.amazonaws.com/alcourses.codeplay/battle/warrior-new-waiting.gif","warrior-attacking":"https://s3.amazonaws.com/alcourses.codeplay/battle/warrior-new-attacking.gif","warrior-dying":"https://s3.amazonaws.com/alcourses.codeplay/battle/grave.png",archer:"https://s3.amazonaws.com/alcourses.codeplay/battle/archer_new.png","archer-attacking":"https://s3.amazonaws.com/alcourses.codeplay/battle/archer_new.png","archer-dying":"https://s3.amazonaws.com/alcourses.codeplay/battle/grave.png",spear:"https://s3.amazonaws.com/alcourses.codeplay/battle/spear.png",arrow:"https://s3.amazonaws.com/alcourses.codeplay/battle/arrow-transparent.png",fire:"https://s3.amazonaws.com/alcourses.codeplay/battle/fireball.png",landscape:"https://s3.amazonaws.com/alcourses.codeplay/battle/landscape.jpg"},bg:"landscape",objects:[{kind:"img",style:{"z-index":4},id:"Hero",imgKey:"hero",startPos:{x:t,y:g},size:{width:h/1.4,height:1.2*h}}],taskDescription:"Just kill your enemies and don't let them kill you. The game has rounds, the hero acts first and the enemies - after him. You should write a command for each round so the hero will know what to do.",size:{width:550,height:450},methods:{"hero.go":{doc:"Hero goes right",async run({field:e,state:t}){e.log("Hero is going..."),t.heroAction="going",await e.changeImage("Hero","hero-going"),await e.safeMove("Hero",{x:s,y:0}),await e.changeImage("Hero","hero")}},"hero.swordAttack":{doc:"Hero attacks using sword. Note that dragons can not be killed with sword",async run({field:e,state:t}){e.log("Hero is attacking with sword..."),await e.changeImage("Hero","hero-sword-attack"),t.heroAction="sword_attacking";const a=function(e,t,{enemies:a}){for(const o in a){const n=a[o],s=t.findById(o);if("dragon"!=n.kind&&Math.abs(s.pos.x-e.x)<=m)return o}return null}(e.findById("Hero").pos,e,t);a?(delete t.enemies[a],await r(a,e)):await p(e.tickTime),await e.changeImage("Hero","hero")}},"hero.spearAttack":{doc:"Use this command to attack with spear. Note that spear can kill only dragons use this command to attack with spear. Note that spear can kill only dragons",async run({field:e,state:t}){e.log("Hero is attacking with spear..."),await e.changeImage("Hero","hero-spear-attack"),t.heroAction="spear_attacking";const a=function(e,t,a){for(const o in a.enemies){const n=a.enemies[o],s=t.findById(o);if("dragon"==n.kind){const t=e.x-s.pos.x;if(s.pos.x<e.x&&t>10&&t<20)return o}}return null}(e.findById("Hero").pos,e,t);await c("Hero",e),a&&(delete t.enemies[a],await r(a,e)),await e.changeImage("Hero","hero")}},"hero.defend":{doc:"Hero stays at the place and defends. Noone can kill him. You also could use this command to skip your step.",async run({field:e,state:t}){e.log("Hero is defending..."),await e.changeImage("Hero","hero-defending"),t.heroAction="defending",await p(e.tickTime)}}},iterations:[{async pre({state:t}){t.enemies=Object.assign({},e)},async post({state:e,field:t}){(function(e){return 0==Object.keys(e.enemies).length})(e)||f("Not all enemies were killed!",t)}}],tickHooks:{async pre(e,{field:t}){t.log(`----- Round nr ${e+1} started -----`),await p(t.tickTime)},async post(t,{state:o,field:n}){t>=a&&f(`You can not use more than ${a} instructions to win`,n);let s=!1,l=[];for(const a in o.enemies)"attack"==e[a].action(t)?(n.log(`${a} is attacking...`),l.push(c(a,n)),!s&&i(a,n,o)&&(s=!0)):(n.log(`${a} is just waiting...`),l.push(d(0,n)));await Promise.all(l),s&&(await r("Hero",n),f("Hero was killed :(",n))}},startCodeVal:o,solutionCode:n};for(const t in e){const a=e[t];let o=g,n={width:h,height:1.2*h};"dragon"==a.kind&&(o=0,n.width*=3,n.height*=2),"warrior"==a.kind&&(n.width/=1.4),l.objects.push({kind:"img",id:t,imgKey:a.kind,startPos:{x:a.location,y:o},size:n})}return l};let y=w({enemies:{Archer:{action:e=>0==e||1==e?"attack":"skip",kind:"archer",location:60}},stepWidth:10,startPosX:34,maxTicksToWin:10,solutionCode:"hero.defend();\nhero.defend();\nhero.go();\nhero.go();\nhero.attack();\n\n",startCodeVal:"// Defeat the archer and don't let him kill you\n// Archer could attack you from any distance\n// Use your shield to defend\nhero.defend();\n"});y.methods["hero.attack"]=y.methods["hero.swordAttack"],delete y.methods["hero.swordAttack"],delete y.methods["hero.spearAttack"];var k=y;let b=w({enemies:{Warrior:{action:e=>"skip",kind:"warrior",location:58}},stepWidth:10,startPosX:40,maxTicksToWin:12,solutionCode:"hero.defend();\nhero.defend();\nhero.go();\nhero.attack();\n\n",startCodeVal:"// Defeat the warrior\n// Come closer and attack using your sword\n"});b.methods["hero.attack"]=b.methods["hero.swordAttack"],delete b.methods["hero.swordAttack"],delete b.methods["hero.spearAttack"];var v=b;let z=w({enemies:{Dragon:{action:e=>e%2==0?"attack":"skip",kind:"dragon",location:50}},stepWidth:20,startPosX:44,maxTicksToWin:12,solutionCode:"// Defeat the dragon\nhero.defend();\nhero.go();\nhero.defend();\nhero.spearAttack();\n\n",startCodeVal:"// Defeat the dragon\n// Note that you can't kill the dragon with sword\n// Dragon don't want to be killed and will try to\n// stop you\n"});z.methods["hero.attack"]=z.methods["hero.swordAttack"];var x=z;let W=w({enemies:{Warrior:{action:e=>e%2==1?"attack":"skip",kind:"warrior",location:59},Warrior2:{action:e=>e%2==0?"attack":"skip",kind:"warrior",location:69}},stepWidth:10,startPosX:40,maxTicksToWin:30,solutionCode:"\nhero.go();\nhero.attack();\nhero.defend();\nhero.go();\nhero.attack();\n",startCodeVal:"// Defeat all the enemies and don't let them\n// kill you\n\n"});W.methods["hero.attack"]=W.methods["hero.swordAttack"],delete W.methods["hero.swordAttack"],delete W.methods["hero.spearAttack"];var D=W;function T(e,t){throw t.log(`Error: ${e}`,{error:!0}),new Error(e)}var C=function(e){let t={};for(let a in e.methods)t[a]={doc:e.methods[a].doc,async run({field:t,state:o},n){o.executedMethods||(o.executedMethods=[]),n&&n.length>0&&T(`Method ${a} has no arguments`,t),o.executedMethods.push(a);let s=0;for(let a of o.executedMethods)a!==e.order[s]&&T("Incorrect order",t),s++;var i;t.log(e.methods[a].log),t.changeBg(e.methods[a].bg),await(i=e.tickTime,new Promise(function(e){setTimeout(e,i)}))}};const a=[{pre:async function(){},post:async function({state:t,field:a}){t.executedMethods&&t.executedMethods.length===e.order.length||T("Task is not finished",a)}}];return{bg:e.startWithBg,objects:[],methods:t,iterations:a,tickHooks:{pre:async function(){},post:async function(){}},size:e.size,images:e.images,startCodeVal:e.startCodeVal,solutionCode:e.solutionCode,taskDescription:e.taskDescription}}({images:{body:"https://s3.amazonaws.com/alcourses.codeplay/avengers/iron-man/iron-man-body.gif",flying:"https://s3.amazonaws.com/alcourses.codeplay/avengers/iron-man/iron-man-flying.gif",hands:"https://s3.amazonaws.com/alcourses.codeplay/avengers/iron-man/iron-man-hands.gif",head:"https://s3.amazonaws.com/alcourses.codeplay/avengers/iron-man/iron-man-head.gif",start:"https://s3.amazonaws.com/alcourses.codeplay/avengers/iron-man/iron-man-start.png"},methods:{takeHands:{bg:"hands",doc:"Iron man takes iron hands",log:"Iron man is taking his iron hands..."},takeBody:{bg:"body",doc:"Iron man takes iron body",log:"Iron man is taking his iron body..."},takeHead:{bg:"head",doc:"Iron man takes iron helmet",log:"Iron man is taking his iron head..."},fly:{bg:"flying",doc:"Iron man flies",log:"Iron man is flying..."}},size:{width:500,height:450},tickTime:2500,startWithBg:"start",order:["takeHands","takeBody","takeHead","fly"],taskDescription:"Imagine you are iron man. Let’s get your outfit on to fly and save your friends.",startCodeVal:"// Let’s get iron man into his outfit\n// Then make him fly to save the world\ntakeHands();\ntakeBody();\n",solutionCode:"  \ntakeHands();\ntakeBody();\ntakeHead();\nfly();\n    "});function H(e,t){throw t.log(`Error: ${e}`,{error:!0}),new Error(e)}var P=function(e){let t={};for(let a in e.methods)t[a]={doc:e.methods[a].doc,async run({field:t},o){var n;o&&o.length>0&&H(`Method ${a} has no arguments`,t),t.log(e.methods[a].log),t.changeBg(e.methods[a].bg),await(n=e.tickTime,new Promise(function(e){setTimeout(e,n)})),a!==e.rightChoice?H("That's not the right choice",t):t.log("Well done!")}};return{bg:e.startWithBg,objects:[],methods:t,iterations:[{pre:async function(){},post:async function(){}}],tickHooks:{pre:async function(){},post:async function(){}},size:e.size,images:e.images,startCodeVal:e.startCodeVal,taskDescription:e.taskDescription}},I=P({images:{granny:"https://s3.amazonaws.com/alcourses.codeplay/question/call-granny.gif",question:"https://s3.amazonaws.com/alcourses.codeplay/question/question.gif",procrastination:"https://s3.amazonaws.com/alcourses.codeplay/question/procrastinating.gif",dancing:"https://s3.amazonaws.com/alcourses.codeplay/question/club-dancing.gif"},startWithBg:"question",size:{width:600,height:450},methods:{callGranny:{doc:"Call granny and ask how she is doing",bg:"granny",log:"Calling granny..."},procrastinate:{doc:"Do absolutely nothing (procrastinate)",bg:"procrastination",log:"Procrastinating..."},goToClub:{doc:"Go to club and have fun",bg:"dancing",log:"Dancing in a club..."}},tickTime:2e3,taskDescription:"You haven't spoken with your granny for a long time. She needs for attention. Please select the right action for this case",rightChoice:"callGranny",startCodeVal:"// You haven't spoken with your granny for a long time\n// Choose the right action\n"}),A=P({images:{question:"https://s3.amazonaws.com/alcourses.codeplay/question/question-chin.gif",procrastination:"https://s3.amazonaws.com/alcourses.codeplay/question/procrastinating.gif",dancing:"https://s3.amazonaws.com/alcourses.codeplay/question/club-dancing.gif",computer:"https://s3.amazonaws.com/alcourses.codeplay/question/work-hard.gif",reading:"https://s3.amazonaws.com/alcourses.codeplay/question/reading.gif"},startWithBg:"question",size:{width:600,height:450},methods:{readMoreBooks:{doc:"Read more books and become smarter",bg:"reading",log:"Reading more books..."},procrastinate:{doc:"Do absolutely nothing (procrastinate)",bg:"procrastination",log:"Procrastinating..."},goToClub:{doc:"Go to club and have fun",bg:"dancing",log:"Dancing in a club..."},playComputerGames:{doc:"Play computer games",bg:"computer",log:"Playing computer games..."}},tickTime:2e3,taskDescription:"You have noticed that you don't have enough words to describe your thoughts. Select the right action to fix that problem",rightChoice:"readMoreBooks",startCodeVal:"// You've noticed that usually you don't have\n// enough words to describe your thoughts.\n// What should you do solve this problem?\n\n"}),j=P({images:{question:"https://s3.amazonaws.com/alcourses.codeplay/question/question-emoji.gif",procrastination:"https://s3.amazonaws.com/alcourses.codeplay/question/procrastinating.gif",dancing:"https://s3.amazonaws.com/alcourses.codeplay/question/club-dancing.gif",computer:"https://s3.amazonaws.com/alcourses.codeplay/question/work-hard.gif",money:"https://s3.amazonaws.com/alcourses.codeplay/question/spend-money.gif"},startWithBg:"question",size:{width:600,height:450},methods:{procrastinate:{doc:"Do absolutely nothing (procrastinate)",bg:"procrastination",log:"Procrastinating..."},goToClub:{doc:"Go to club and have fun",bg:"dancing",log:"Dancing in a club..."},workHard:{doc:"Work hard to chieve your dreams",bg:"computer",log:"Working hard..."},spendMoreMoney:{doc:"Spend  more money",bg:"money",log:"Spending more money..."}},tickTime:2e3,taskDescription:"You have a goal and you want to achieve it. Pick the right action",rightChoice:"workHard",startCodeVal:"// You have a goal and you want to achieve it\n// Pick the right action\n"}),V=a(92);function R(e,t){throw e.field.log(`Error: ${t}. Please fix your code and try again ;)`,{error:!0}),new Error(t)}let M={images:{skale:"https://s3.amazonaws.com/alcourses.codeplay/labyrinth/skale.jpg"},bg:"skale",objects:[],taskDescription:"Example variables",size:{width:450,height:450}};M.methods={testVar:{doc:"testVar tests method receives single number parameter",async run(e,t){await Object(V.a)(e.field.tickTime),e.field.log(JSON.stringify(t)),t&&1==t.length||R(e,"Incorrect number of arguments passed to function: testVar"),12!=t[0]&&(e.field.log(JSON.stringify(t[0])),R(e,"NONONONON")),e.state.solved=!0}}},M.iterations=[{pre:async function(){},post:async function(e){e.state.solved||R(e,"Task is not solved"),await e.field.tickSleep()}},{async pre(){},async post(e){e.state.solved||R(e,"Task is not solved")}}],M.tickHooks={pre:async function(){},post:async function(){}},M.startCodeVal="var x = 12;\n\n";var O=M;const B=100,S=50,E=9,$={width:B,height:1.2*B};function N(e){return new Promise(function(t){setTimeout(t,e)})}function q(e,t){throw t.log(`Error: ${e}`,{error:!0}),new Error(e)}var G=function({iterations:e,startPosX:t,maxTicksToWin:a,startCodeVal:o,stepWidth:n,solutionCode:s}){function i(e){let t=[];for(const a in e){const o=e[a];let n=S,s={width:B,height:1.2*B};"dragon"==o.kind&&(n=0,s.width*=3,s.height*=2),"warrior"==o.kind&&(s.width/=1.4),t.push({kind:"img",id:a,imgKey:o.kind,startPos:{x:o.location,y:n},size:s})}return t}function r(e,t,a){const o=t.findById(e),n=t.findById("Hero");let s=!1;switch(a.enemies[e].kind){case"archer":s=n.pos.x<o.pos.x;break;case"warrior":s=n.pos.x<o.pos.x+E&&n.pos.x+E>=o.pos.x;break;default:s=!0}return s&&!("defending"==a.heroAction)}function c(e){return 0==Object.keys(e.enemies).length}async function d(e,t){let a=t.findById(e).img.key+"-dying";"Hero"==e?(a="hero-dying",t.log("Unfortunatelly hero was killed. Please try again!")):t.log(`${e} is dying...`),"Dragon"===e||"Hero"===e||e.includes("Warrior")||t.changeImageSize(e,$),await t.changeImage(e,a),e.includes("Warrior"),e.includes("Archer")&&await t.safeMove(e,{x:2,y:1},{fast:!0}),await N(t.tickTime)}async function l(e,t){const a=t.findById(e),o=a.img.key,n=o+"-attacking";await t.changeImage(e,n);const s={width:B/2,height:B/2};if("Hero"==e){const e=t.addObject({kind:"img",imgKey:"spear",startPos:{x:a.pos.x,y:a.pos.y},size:{width:1.5*s.width,height:2.5*s.height}});await t.safeMove(e.id,{x:0,y:-30}),t.removeObject(e.id)}const i=t.findById("Hero");let r=t.state.allEnemies[e];if(r)switch(r.kind){case"dragon":{const e=t.addObject({kind:"img",imgKey:"fire",startPos:{x:a.pos.x+8,y:a.pos.y+27},size:s});await t.moveToPos(e.id,i.pos),t.removeObject(e.id);break}case"archer":{let e=a.pos.y+8;const o=t.addObject({kind:"img",imgKey:"arrow",startPos:{x:a.pos.x,y:e},size:{width:s.width,height:s.height/3}}),n={y:e,x:i.pos.x+7};await t.moveToPos(o.id,n),t.removeObject(o.id);break}default:await h(0,t)}await t.changeImage(e,o)}async function h(e,t){await N(t.tickTime)}async function g({field:e,state:t}){e.log("Hero is attacking with sword..."),await e.changeImage("Hero","hero-sword-attack"),t.heroAction="sword_attacking";const a=function(e,t,{enemies:a}){for(const o in a){const n=a[o],s=t.findById(o);if("dragon"!=n.kind&&Math.abs(s.pos.x-e.x)<=E)return o}return null}(e.findById("Hero").pos,e,t);a?(delete t.enemies[a],await d(a,e)):await N(e.tickTime),await e.changeImage("Hero","hero")}async function m({field:e,state:t}){e.log("Hero is attacking with spear..."),await e.changeImage("Hero","hero-spear-attack"),t.heroAction="spear_attacking";const a=function(e,t,a){for(const o in a.enemies){const n=a.enemies[o],s=t.findById(o);if("dragon"==n.kind){const t=e.x-s.pos.x;if(s.pos.x<e.x&&t>10&&t<20)return o}}return null}(e.findById("Hero").pos,e,t);await l("Hero",e),a&&(delete t.enemies[a],await d(a,e)),await e.changeImage("Hero","hero")}let u={images:{hero:"https://s3.amazonaws.com/alcourses.codeplay/battle/hero-waiting.gif","hero-sword-attack":"https://s3.amazonaws.com/alcourses.codeplay/battle/hero-attacking.gif","hero-spear-attack":"https://s3.amazonaws.com/alcourses.codeplay/battle/hero-waiting.gif","hero-going":"https://s3.amazonaws.com/alcourses.codeplay/battle/hero-running.gif","hero-dying":"https://s3.amazonaws.com/alcourses.codeplay/battle/grave.png","hero-defending":"https://s3.amazonaws.com/alcourses.codeplay/battle/hero-defending.gif",dragon:"https://s3.amazonaws.com/alcourses.codeplay/battle/dragon-flying.gif","dragon-attacking":"https://s3.amazonaws.com/alcourses.codeplay/battle/dragon-flying.gif","dragon-dying":"https://s3.amazonaws.com/alcourses.codeplay/battle/grave-with-wings.gif",warrior:"https://s3.amazonaws.com/alcourses.codeplay/battle/warrior-new-waiting.gif","warrior-attacking":"https://s3.amazonaws.com/alcourses.codeplay/battle/warrior-new-attacking.gif","warrior-dying":"https://s3.amazonaws.com/alcourses.codeplay/battle/grave.png",archer:"https://s3.amazonaws.com/alcourses.codeplay/battle/archer_new.png","archer-attacking":"https://s3.amazonaws.com/alcourses.codeplay/battle/archer_new.png","archer-dying":"https://s3.amazonaws.com/alcourses.codeplay/battle/grave.png",spear:"https://s3.amazonaws.com/alcourses.codeplay/battle/spear.png",arrow:"https://s3.amazonaws.com/alcourses.codeplay/battle/arrow-transparent.png",fire:"https://s3.amazonaws.com/alcourses.codeplay/battle/fireball.png",landscape:"https://s3.amazonaws.com/alcourses.codeplay/battle/landscape.jpg"},bg:"landscape",objects:[{kind:"img",style:{"z-index":4},id:"Hero",imgKey:"hero",startPos:{x:t,y:S},size:{width:B/1.4,height:1.2*B}}],taskDescription:"Just kill your enemies and don't let them kill you. The game has rounds, the hero acts first and the enemies - after him. You should write a command for each round so the hero will know what to do.",size:{width:550,height:450},methods:{"hero.go":{doc:"Hero goes right, you also can pass number of steps, like: hero.go(2);",async run({field:e,state:t},a){e.log("Hero is going...");let o=1;a.length>0&&(o=a[0]),t.heroAction="going",await e.changeImage("Hero","hero-going"),await e.safeMove("Hero",{x:n*o,y:0}),await e.changeImage("Hero","hero")}},"hero.swordAttack":{doc:"Hero attacks using sword. Note that dragons can not be killed with sword",async run({field:e,state:t}){await g({field:e,state:t})}},"hero.spearAttack":{doc:"Use this command to attack with spear. Note that spear can kill only dragons use this command to attack with spear. Note that spear can kill only dragons",async run({field:e,state:t}){await m({field:e,state:t})}},"hero.attackWith":{doc:"The hero attacks using the selected weapon. Weapon should be passed by argument. Example: hero.attackWith('sword'); or hero.attackWith('spear');",async run({field:e,state:t},a){1!=a.length&&q("hero.attackWith takes only one argument: 'spear' or 'sword'");let o=a[0];"spear"==o?await m({field:e,state:t}):"sword"==o?await g({field:e,state:t}):q("hero.attackWith takes only one argument: 'spear' or 'sword'")}},"hero.defend":{doc:"Hero stays at the place and defends. Noone can kill him. You also could use this command to skip your step.",async run({field:e,state:t}){e.log("Hero is defending..."),await e.changeImage("Hero","hero-defending"),t.heroAction="defending",await N(e.tickTime)}},print:{doc:"You can use this instruction to print value of some variable to the terminal. Example: print(x);",async run({field:e},t){e.log(`Printing using command "print": ${t[0]}`)}}},iterations:function(){let t=[],a=!0;for(let o of e)t.push({async pre({state:t,field:n},s){if(a)a=!1;else{for(let t in e[0].enemies)n.removeObject(t);let t=i(o.enemies);for(let e of t)n.addObject(e)}t.funResults=o.funResults,t.enemies=Object.assign({},o.enemies),t.allEnemies=Object.assign({},o.enemies)},async post({state:e,field:t}){c(e)||q("Not all enemies were killed!",t)}});return t}(),tickHooks:{async pre(e,{field:t}){t.log(`----- Round nr ${e+1} started -----`),await N(t.tickTime)},async post(e,{state:t,field:o}){e>=a&&q(`You can not use more than ${a} instructions to win`,o);let n=!1,s=[];for(const a in t.enemies)"attack"==t.allEnemies[a].action(e)?(o.log(`${a} is attacking...`),s.push(l(a,o)),!n&&r(a,o,t)&&(n=!0)):(o.log(`${a} is just waiting...`),s.push(h(0,o)));await Promise.all(s),n&&(await d("Hero",o),q("Hero was killed :(",o))}},startCodeVal:o,solutionCode:s};for(let t of i(e[0].enemies))u.objects.push(t);return u};let _=G({iterations:[{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:58}},funResults:{getDistance:1}},{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:68}},funResults:{getDistance:2}},{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:78}},funResults:{getDistance:3}}],stepWidth:10,startPosX:40,maxTicksToWin:12,solutionCode:'// Defeat the warrior\n// Come closer and attack using your sword\n// Distance to your enemy may differ\n// Hint: you can use variable "distance"\n\nvar distance = getDistance();\n\n// Write your code below\nhero.go(distance);\nhero.attack();\n',startCodeVal:'// Defeat the warrior\n// Come closer and attack using your sword\n// Distance to your enemy may differ\n// Hint: you can use variable "distance"\n\nvar distance = getDistance();\n\n// Write your code below\n'});_.methods["hero.attack"]=_.methods["hero.swordAttack"],delete _.methods["hero.swordAttack"],delete _.methods["hero.spearAttack"],delete _.methods["hero.attackWith"];var L=_;let Y=G({iterations:[{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:58},Dragon:{action:()=>"skip",kind:"dragon",location:28}},funResults:{getDistance:1}},{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:68},Dragon:{action:()=>"skip",kind:"dragon",location:28}},funResults:{getDistance:2}},{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:78},Dragon:{action:()=>"skip",kind:"dragon",location:28}},funResults:{getDistance:3}}],stepWidth:10,startPosX:40,maxTicksToWin:12,solutionCode:"// Defeat the warrior and the dragon\n// Attack the dragon firstly\n// Then come to the warrior and use\n// your sword\n// Distance to the warrior may differ\n// Hint: you can use variable \"distance\"\n\nvar distance = getDistance();\n\n// Write your code below\nhero.attackWith('spear');\nhero.go(distance);\nhero.attackWith('sword');\n",startCodeVal:'// Defeat the warrior and the dragon\n// Attack the dragon firstly\n// Then come to the warrior and use\n// your sword\n// Distance to the warrior may differ\n// Hint: you can use variable "distance"\n\nvar distance = getDistance();\n\n// Write your code below\n'});delete Y.methods["hero.swordAttack"],delete Y.methods["hero.spearAttack"];var X=Y;let F=G({iterations:[{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:68},Dragon:{action:()=>"skip",kind:"dragon",location:38}},funResults:{getDistance:2}},{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:78},Dragon:{action:()=>"skip",kind:"dragon",location:38}},funResults:{getDistance:3}}],stepWidth:10,startPosX:40,maxTicksToWin:12,solutionCode:"// Defeat the warrior and the dragon\n// Make 1 step forward and\n// attack the dragon\n// Then come to the warrior and use\n// your sword\n// Hint: you can use variable \"distance\"\n// Hint: you can use math operations (like -)\n\n// Distance to warrior\nvar distance = getDistance();\n\n// Write your code below\nhero.go(1);\nhero.attackWith('spear');\nhero.go(distance - 1);\nhero.attackWith('sword');\n",startCodeVal:"// Defeat the warrior and the dragon\n// Make 1 step forward and\n// attack the dragon\n// Then come to the warrior and use\n// your sword\n// Hint: you can use variable \"distance\"\n// Hint: you can use math operations (like -)\n\n// Distance to warrior\nvar distance = getDistance();\n\n// Write your code below\nhero.go(1);\nhero.attackWith('spear');\n"});delete F.methods["hero.swordAttack"],delete F.methods["hero.spearAttack"];var K=F;let J=G({iterations:[{enemies:{Dragon:{action:()=>"skip",kind:"dragon",location:28}},funResults:{}}],stepWidth:10,startPosX:40,maxTicksToWin:12,solutionCode:"// Defeat the warrior\n// Come closer and attack using your sword\n// Distance to your enemy may differ\n// Hint: you can use variable \"distance\"\n\nvar weapon = getPerfectWeapon();\n\n// Select one option and uncomment it removing //\nhero.attackWith('spear');\n",startCodeVal:"// Defeat the dragon\n\n// Select the correct option\n// and uncomment it removing //\n// hero.attackWith('sword');\n// hero.attackWith('spear');\n"});delete J.methods["hero.swordAttack"],delete J.methods["hero.spearAttack"];var U=J;let Q=G({iterations:[{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:48}},funResults:{}}],stepWidth:10,startPosX:40,maxTicksToWin:12,solutionCode:"// Defeat the warrior\n\nvar weapon = 'sword';\n\n// Replace \"print\" with the appropriate instruction\n// to attack the warrior\nhero.attackWith(weapon);\n",startCodeVal:"// Defeat the warrior\n\nvar weapon = 'sword';\n\n// Replace \"print\" with\n// the appropriate instruction\n// to attack the warrior\nprint(weapon);\n"});delete Q.methods["hero.swordAttack"],delete Q.methods["hero.spearAttack"];var Z=Q;let ee=G({iterations:[{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:48}},funResults:{getPerfectWeapon:"sword"}},{enemies:{Dragon:{action:()=>"skip",kind:"dragon",location:28}},funResults:{getPerfectWeapon:"spear"}}],stepWidth:10,startPosX:40,maxTicksToWin:12,solutionCode:"// Defeat the warrior\n// Note, that there are multiple\n// testing iterations\n// so your enemies will change\n\n// Fortunately, you have information\n// about perfect weapon for every\n// testing iteration\nvar weapon = getPerfectWeapon();\n\n// Type your code below\nhero.attackWith(weapon);\n",startCodeVal:"// Defeat the warrior\n// Note, that there are multiple\n// testing iterations\n// so your enemies will change\n\n// Fortunately, you have information\n// about perfect weapon for each\n// testing iteration\nvar weapon = getPerfectWeapon();\n\n// Type your code below\n"});delete ee.methods["hero.swordAttack"],delete ee.methods["hero.spearAttack"];var te=ee;let ae=G({iterations:[{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:68}},funResults:{getPerfectWeapon:"sword",getDistance:2}},{enemies:{Dragon:{action:()=>"skip",kind:"dragon",location:38}},funResults:{getPerfectWeapon:"spear",getDistance:1}}],stepWidth:10,startPosX:40,maxTicksToWin:12,solutionCode:"// Defeat your enemy\n// Come closer and attack\n// Distance to your enemy may differ\n// Enemy also may differ\n\nvar weapon = getPerfectWeapon();\nvar distance = getDistance();\n\n// Write your code below\nhero.go(distance);\nhero.attackWith(weapon);\n",startCodeVal:"// Defeat your enemy\n// Come closer and attack\n// Distance to your enemy may differ\n// Enemy also may differ\n\nvar weapon = getPerfectWeapon();\nvar distance = getDistance();\n\n// Write your code below\n"});delete ae.methods["hero.swordAttack"],delete ae.methods["hero.spearAttack"];var oe=ae;function ne(e,t){throw e.field.log(`Error: ${t}. Please fix your code and try again ;)`,{error:!0}),new Error(t)}let se={images:{skale:"https://s3.amazonaws.com/alcourses.codeplay/labyrinth/skale.jpg"},bg:"skale",objects:[],taskDescription:"Example variables",size:{width:450,height:450}};se.methods={testVar:{doc:"testVar tests method receives single number parameter",async run(e,t){await Object(V.a)(e.field.tickTime),e.field.log(JSON.stringify(t)),t&&1==t.length||ne(e,"Incorrect number of arguments passed to function: testVar"),"x"!=t[0].name&&(e.field.log(JSON.stringify(t[0])),ne(e,"NONONONON")),e.state.solved=!0}}},se.iterations=[{pre:async function({state:e}){e.funResults.getSteps=2},post:async function(e){e.state.solved||ne(e,"Task is not solved"),await e.field.tickSleep()}},{async pre({state:e}){e.funResults.getSteps=20},async post(e){e.state.solved&&ne(e,"Task is not solved")}}],se.tickHooks={pre:async function(){},post:async function(){}},se.startCodeVal="var x = getSteps();\n\nif (x < 5) {\n  testVar(x);\n} else {\n  var y;\n}\n";var ie=se;let re=G({iterations:[{enemies:{Warrior:{action:()=>"skip",kind:"warrior",location:49}},funResults:{getEnemyType:"warrior"}},{enemies:{Dragon:{action:()=>"skip",kind:"dragon",location:28}},funResults:{getEnemyType:"dragon"}}],stepWidth:10,startPosX:40,maxTicksToWin:12,solutionCode:"// Defeat the warrior\n// Come closer and attack using your sword\n// Distance to your enemy may differ\n// Hint: you can use variable \"distance\"\n\nvar enemy = getEnemyType();\n\nif (enemy == 'dragon') {\n  hero.spearAttack();\n}\n\nif (enemy == 'warrior') {\n  hero.swordAttack();\n}\n",startCodeVal:"// Defeat the warrior\n// Come closer and attack using your sword\n// Distance to your enemy may differ\n// Hint: you can use variable \"distance\"\n\nvar enemy = getEnemyType();\n\nif (enemy == 'dragon') {\n  hero.spearAttack();\n}\n\nif (enemy == 'warrior') {\n  hero.swordAttack();\n}\n\n"});delete re.methods["hero.attackWith"];var ce=re;t.a={car:o,easyLabyrinth:c,mediumLabyrinth:d,hardLabyrinth:l,oneArcher:k,oneWarrior:v,oneDragon:x,ironMan:C,callGranny:I,readMore:A,workHard:j,twoWarriors:D,varExample:O,battleVarDistance:L,battleVarDistanceWithDragon:X,battleVarDistanceWithVarDragon:K,battleVarWeaponSimpleDragon:U,battleVarWeaponSimpleWarrior:Z,battleVarWeapon:te,battleVarWeaponAndDistance:oe,condExample:ie,battleCondEnemyType:ce}},339:function(e,t,a){"use strict";a.r(t);var o=a(34),n=a(147),s=a(110);async function i(e){for(const t in e.images){const a=e.images[t];o.a.info(`PreLoading image ${a} - started`),await r(a),o.a.info(`PreLoading image ${a} - finished`)}}function r(e){return new Promise(function(t,a){const o=new Image;o.src=e,o.onload=t,o.onerror=function(){a(`Failed to load image: ${e}`)}})}window.addEventListener("DOMContentLoaded",function(){setTimeout(()=>{!async function(){for(let e in n.a){o.a.info(`-------- PreLoading images for config: ${e} - started --------`);let t=n.a[e];await i(t),o.a.info(`-------- PreLoading images for config: ${e} - finished --------`)}for(let e of["success","fail"]){o.a.info(`-------- Preloading gifs for type: ${e} - started --------`);for(let t of s.a[e])o.a.info(`PreLoading image ${t} - started`),await r(t),o.a.info(`PreLoading image ${t} - started`);o.a.info(`-------- Preloading gifs for type: ${e} - finished --------`)}o.a.info("--------------------------------------"),o.a.info("-------- Preloading finished! --------")}()},3e3)})},34:function(e,t,a){"use strict";t.a={error:console.error,info:console.log,warn:console.warn,debug:console.log}},92:function(e,t,a){"use strict";t.a=function(e){return new Promise(function(t){setTimeout(t,e)})}}});